{"version":3,"sources":["components/Input/index.js","components/Input/Input.js","constants.js","helper.js","App.js","index.js"],"names":["Input","value","onKeyDown","onChange","className","type","autoFocus","autoComplete","operatorsDictionary","operators","PLUS","MINUS","TIMES","DIVIDED","operations","x","y","calculate","initialStack","length","result","error","stack","forEach","el","includes","pop","push","Number","isFinite","App","state","message","e","keyCode","key","setState","target","renderMessage","renderStack","join","outputStack","newValue","inputArray","split","slice","this","onKeyPress","PureComponent","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAEeA,G,MCED,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SACjC,OACE,2BACEC,UAAU,QACVC,KAAK,OACLJ,MAAOA,EACPC,UAAWA,EACXC,SAAUA,EACVG,WAAS,EACTC,aAAa,UCbNC,EACL,IADKA,EAEJ,IAFIA,EAGJ,IAHIA,EAIF,IAGEC,EAAY,CACvBD,EACAA,EACAA,EACAA,G,OCTME,EAAgCF,EAA1BG,EAA0BH,EAAnBI,EAAmBJ,EAAZK,EAAYL,EAElCM,GAAU,mBACbJ,GAAO,SAACK,EAAGC,GAAJ,OAAUD,EAAIC,KADR,cAEbL,GAAQ,SAACI,EAAGC,GAAJ,OAAUD,EAAIC,KAFT,cAGbJ,GAAQ,SAACG,EAAGC,GAAJ,OAAUD,EAAIC,KAHT,cAIbH,GAAU,SAACE,EAAGC,GAAJ,OAAUD,EAAIC,KAJX,GAOHC,EAAY,SAACC,GACxB,IAAKA,EAAaC,OAChB,MAAO,CACLC,OAAQ,KACRC,OAAO,GAIX,IAAMC,EAAK,YAAOJ,GAgBlB,OAdAI,EAAMC,SAAQ,SAACC,GACb,GAAIf,EAAUgB,SAASD,GAAK,CAAC,IAAD,EACX,CAACF,EAAMI,MAAOJ,EAAMI,OAA5BV,EADmB,KAChBD,EADgB,KAE1BO,EAAMK,KAAKb,EAAWU,GAAIT,EAAGC,QACxB,KAAIY,OAAOC,SAASD,OAAOJ,IAGhC,MAAO,CACLH,OAAO,GAHTC,EAAMK,KAAKC,OAAOJ,QASf,CACLJ,OAFaE,EAAMI,MAGnBL,MAAOH,EAAaC,SAAWG,EAAMH,SC0F1BW,G,kNAxHbC,MAAQ,CACNT,MAAO,GACPrB,MAAO,GACP+B,QAAS,I,EAGX9B,UAAY,SAAC+B,GACO,KAAdA,EAAEC,SAA4B,WAAVD,EAAEE,IACxB,EAAKC,SAAS,CACZd,MAAO,KAEc,KAAdW,EAAEC,SAA4B,UAAVD,EAAEE,KAC/B,EAAKlB,a,EAITd,SAAW,SAAC8B,GACV,EAAKG,SAAS,CACZnC,MAAOgC,EAAEI,OAAOpC,S,EAIpBqC,cAAgB,WAAO,IACbN,EAAY,EAAKD,MAAjBC,QAER,OAAKA,EAAQb,OAKX,uBAAGf,UAAU,SAAU4B,GAJhB,M,EAQXO,YAAc,WAAO,IACXjB,EAAU,EAAKS,MAAfT,MAER,OAAKA,EAAMH,OAKT,uBAAGf,UAAU,SAAb,WAA2BkB,EAAMkB,KAAK,KAAtC,MAJO,M,EAQXvB,UAAY,WAAO,IAAD,EACS,EAAKc,MAAtB9B,EADQ,EACRA,MAAOqB,EADC,EACDA,MACXU,EAAU,GACVS,EAAc,GACdC,EAAW,GAEf,GAAIzC,EAAO,CACT,IAAM0C,EAAa1C,EAAM2C,MAAM,KAC/B,GAAID,EAAWxB,OAAS,EAAG,CAAC,IAAD,EACCF,EAAU,GAAD,mBAAKK,GAAL,YAAeqB,KAA1CvB,EADiB,EACjBA,OADiB,EACTC,OAEdW,EAAU,gBACVS,EAAW,sBAAOnB,GAAP,YAAiBqB,KAE5BF,EAAc,CAACrB,QAGjB,GAAIX,EAAUgB,SAASxB,GACrB,GAAIqB,EAAMH,OAAS,EAAG,CAAC,IAAD,EACMF,EAAU,GAAD,mBAAKK,EAAMuB,OAAO,IAAlB,CAAsB5C,KAAjDmB,EADY,EACZA,OADY,EACJC,OAEdW,EAAU,0BACVS,EAAW,YAAOnB,GAClBoB,EAAWzC,GAEXwC,EAAW,sBAAOnB,EAAMuB,MAAM,GAAI,IAAvB,CAA2BzB,SAGxCY,EAAU,8BACVS,EAAW,YAAOnB,GAClBoB,EAAWzC,OAEJ2B,OAAOC,SAASD,OAAO3B,IAChCwC,EAAW,sBAAOnB,GAAP,CAAcrB,KAEzB+B,EAAU,kBACVS,EAAW,YAAOnB,GAClBoB,EAAWzC,QAIf+B,EAAU,qBACVS,EAAW,YAAOnB,GAGpB,EAAKc,SAAS,CACZd,MAAOmB,EACPxC,MAAOyC,EACPV,a,uDAIM,IACA/B,EAAU6C,KAAKf,MAAf9B,MAER,OACE,yBAAKG,UAAU,OACb,wBAAIA,UAAU,UAAd,sCACA,2BACE,kBAAC,EAAD,CACEH,MAAOA,EACP8C,WAAYD,KAAKC,WACjB7C,UAAW4C,KAAK5C,UAChBC,SAAU2C,KAAK3C,YAGjB2C,KAAKP,cACLO,KAAKR,gBACP,uBAAGlC,UAAU,QAAb,SAA0B,qCAA1B,wBAA6D,mCAA7D,yB,GAnHU4C,kBCDlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.a6cd89d7.chunk.js","sourcesContent":["import Input from './Input.js';\n\nexport default Input;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Input.css';\n\nconst Input = ({ value, onKeyDown, onChange }) => {\n  return (\n    <input\n      className=\"input\"\n      type=\"text\"\n      value={value}\n      onKeyDown={onKeyDown}\n      onChange={onChange}\n      autoFocus\n      autoComplete=\"off\"\n    />\n  );\n}\n\nInput.propTypes = {\n  value: PropTypes.string.isRequired,\n  onKeyDown: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Input;\n","export const operatorsDictionary = {\n  PLUS: '+',\n  MINUS: '-',\n  TIMES: '*',\n  DIVIDED: '/',\n};\n\nexport const operators = [\n  operatorsDictionary.PLUS,\n  operatorsDictionary.MINUS,\n  operatorsDictionary.TIMES,\n  operatorsDictionary.DIVIDED,\n];\n","import { operators, operatorsDictionary } from './constants';\n\nconst { PLUS, MINUS, TIMES, DIVIDED } = operatorsDictionary;\n\nconst operations = {\n  [PLUS]: (x, y) => x + y,\n  [MINUS]: (x, y) => x - y,\n  [TIMES]: (x, y) => x * y,\n  [DIVIDED]: (x, y) => x / y,\n};\n\nexport const calculate = (initialStack) => {\n  if (!initialStack.length) {\n    return {\n      result: null,\n      error: true,\n    };\n  }\n\n  const stack = [...initialStack];\n\n  stack.forEach((el) => {\n    if (operators.includes(el)) {\n      const [y, x] = [stack.pop(), stack.pop()];\n      stack.push(operations[el](x, y));\n    } else if (Number.isFinite(Number(el))) {\n      stack.push(Number(el));\n    } else {\n      return {\n        error: true,\n      }\n    }\n  });\n\n  const result = stack.pop();\n  return {\n    result,\n    error: initialStack.length !== stack.length,\n  };\n};\n","import React, { PureComponent } from 'react';\nimport Input from 'components/Input';\nimport { operators } from './constants';\nimport { calculate } from './helper';\nimport './App.css';\n\nclass App extends PureComponent {\n  state = {\n    stack: [],\n    value: '',\n    message: '',\n  };\n\n  onKeyDown = (e) => {\n    if (e.keyCode === 27 || e.key === 'Escape') {\n      this.setState({\n        stack: [],\n      });\n    } else if (e.keyCode === 13 || e.key === 'Enter') {\n      this.calculate();\n    }\n  };\n\n  onChange = (e) => {\n    this.setState({\n      value: e.target.value,\n    });\n  };\n\n  renderMessage = () => {\n    const { message } = this.state;\n\n    if (!message.length) {\n      return null;\n    }\n\n    return (\n      <p className=\"error\">{ message }</p>\n    );\n  };\n\n  renderStack = () => {\n    const { stack } = this.state;\n\n    if (!stack.length) {\n      return null;\n    }\n\n    return (\n      <p className=\"stack\">{ `[${stack.join(' ')}]` }</p>\n    );\n  };\n\n  calculate = () => {\n    const { value, stack } = this.state;\n    let message = '';\n    let outputStack = [];\n    let newValue = '';\n\n    if (value) {\n      const inputArray = value.split(' ');\n      if (inputArray.length > 1) {\n        const { result, error } = calculate([...stack, ...inputArray]);\n        if (error) {\n          message = 'Can not count';\n          outputStack = [...stack, ...inputArray];\n        } else {\n          outputStack = [result];\n        }\n      } else {\n        if (operators.includes(value)) {\n          if (stack.length > 1) {\n            const { result, error } = calculate([...stack.slice(-2), value]);\n            if (error) {\n              message = 'Incorrect input string1';\n              outputStack = [...stack];\n              newValue = value;\n            } else {\n              outputStack = [...stack.slice(0, -2), result];\n            }\n          } else {\n            message = 'Not enough numbers to count';\n            outputStack = [...stack];\n            newValue = value;\n          }\n        } else if (Number.isFinite(Number(value))) {\n          outputStack = [...stack, value];\n        } else {\n          message = 'Incorrect value';\n          outputStack = [...stack];\n          newValue = value;\n        }\n      }\n    } else {\n      message = 'Empty input string';\n      outputStack = [...stack];\n    }\n\n    this.setState({\n      stack: outputStack,\n      value: newValue,\n      message,\n    });\n  };\n\n  render() {\n    const { value } = this.state;\n\n    return (\n      <div className=\"app\">\n        <h1 className=\"header\">Reverse Polish notation calculator</h1>\n        <p>\n          <Input\n            value={value}\n            onKeyPress={this.onKeyPress}\n            onKeyDown={this.onKeyDown}\n            onChange={this.onChange}\n          />\n        </p>\n        { this.renderStack() }\n        { this.renderMessage() }\n        <p className=\"note\">Press <em>Enter</em> for calculation and <em>Esc</em> for clear cache</p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}